import PropTypes from 'prop-types';
import { forwardRef } from 'react';
import { Link as RouterLink } from 'react-router-dom';
// @mui
import { useTheme } from '@mui/material/styles';
import { Box, Link } from '@mui/material';

// ----------------------------------------------------------------------

const Logo = forwardRef(({ disabledLink = false, sx, ...other }, ref) => {
  const theme = useTheme();

  const PRIMARY_LIGHT = theme.palette.primary.light;

  const PRIMARY_MAIN = theme.palette.primary.main;

  const PRIMARY_DARK = theme.palette.primary.dark;

  // OR using local (public folder)
  // -------------------------------------------------------
  // const logo = (
  //   <Box
  //     component="img"
  //     src="/logo/logo_single.svg" => your path
  //     sx={{ width: 40, height: 40, cursor: 'pointer', ...sx }}
  //   />
  // );

  const logo = (
    <Box
      ref={ref}
      component="div"
      sx={{
        width: 40,
        height: 40,
        display: 'inline-flex',
        ...sx,
      }}
      {...other}
    >
      <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 553.000000 717.000000">
        <defs>
          <linearGradient id="BG1" x1="100%" x2="50%" y1="9.946%" y2="50%">
            <stop offset="0%" stopColor={PRIMARY_DARK} />
            <stop offset="100%" stopColor={PRIMARY_MAIN} />
          </linearGradient>

          <linearGradient id="BG2" x1="50%" x2="50%" y1="0%" y2="100%">
            <stop offset="0%" stopColor={PRIMARY_LIGHT} />
            <stop offset="100%" stopColor={PRIMARY_MAIN} />
          </linearGradient>

          <linearGradient id="BG3" x1="50%" x2="50%" y1="0%" y2="100%">
            <stop offset="0%" stopColor={PRIMARY_LIGHT} />
            <stop offset="100%" stopColor={PRIMARY_MAIN} />
          </linearGradient>
        </defs>

       
<g transform="translate(0.000000,717.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M2215 7021 c-39 -16 34 108 -905 -1561 -147 -261 -275 -489 -284
-507 -35 -69 -59 -23 525 -988 40 -65 65 -95 89 -108 33 -16 106 -17 1207 -15
1164 3 1173 3 1193 23 11 12 153 234 315 494 224 360 295 482 295 506 0 19
-16 58 -42 101 -129 215 -1204 1975 -1224 2005 -14 20 -36 41 -50 48 -29 13
-1086 15 -1119 2z m1561 -1121 c304 -498 554 -908 554 -912 0 -5 -195 -8 -433
-8 l-433 0 -502 904 c-276 497 -502 909 -502 915 0 8 104 11 381 9 l382 -3
553 -905z m-1341 473 c94 -169 191 -345 217 -393 l48 -86 -423 -720 c-233
-395 -459 -781 -502 -856 -44 -76 -83 -137 -87 -135 -10 3 -431 699 -431 713
0 14 994 1784 1002 1784 3 -1 83 -139 176 -307z m579 -1044 c97 -174 179 -324
182 -333 6 -15 -29 -16 -380 -16 -212 0 -386 2 -386 5 0 17 394 675 400 668 4
-4 87 -150 184 -324z m1278 -646 c-23 -37 -117 -189 -210 -338 l-169 -270
-1011 -3 -1011 -2 74 127 c41 71 130 223 197 340 l123 212 1020 3 c561 2 1022
2 1024 1 2 -1 -15 -33 -37 -70z"/>
<path d="M739 3400 c-177 -28 -313 -122 -380 -265 -61 -129 -64 -157 -64 -540
0 -303 2 -359 18 -415 50 -186 159 -304 332 -360 62 -20 98 -24 316 -29 l246
-6 42 -28 c81 -54 81 -52 81 -538 0 -453 -2 -471 -49 -522 -43 -47 -108 -59
-299 -55 -197 4 -235 16 -274 91 -21 38 -23 58 -26 225 l-4 182 -191 -2 -192
-3 1 -210 c2 -238 11 -293 69 -412 58 -118 187 -211 340 -244 95 -22 530 -18
619 4 155 39 272 129 331 252 60 127 60 130 60 700 l0 520 -26 77 c-48 141
-127 235 -242 288 -113 53 -164 61 -417 69 -151 4 -243 11 -256 19 -34 18 -72
69 -84 110 -14 50 -13 535 1 587 15 52 65 100 119 115 29 8 108 11 229 8 175
-3 188 -4 224 -26 60 -38 67 -61 67 -227 l0 -145 195 0 195 0 0 158 c-1 86 -7
191 -14 232 -26 147 -118 274 -238 330 -123 57 -162 63 -428 66 -135 1 -270
-1 -301 -6z"/>
<path d="M2040 3216 l0 -196 75 0 75 0 0 -1190 0 -1190 -75 0 -75 0 0 -196 0
-195 563 3 c495 4 569 6 622 21 209 61 325 180 371 382 18 75 19 145 19 1185
0 1225 3 1165 -65 1301 -60 118 -146 190 -285 237 l-80 27 -572 3 -573 3 0
-195z m1108 -228 c83 -56 77 37 80 -1136 2 -745 -1 -1055 -9 -1085 -15 -58
-66 -103 -131 -117 -34 -7 -136 -10 -278 -8 l-225 3 -3 1188 -2 1188 263 -3
264 -3 41 -27z"/>
<path d="M4381 3399 c-111 -17 -205 -63 -281 -138 -72 -71 -108 -135 -137
-241 -16 -57 -18 -111 -18 -425 0 -319 2 -367 18 -425 51 -179 152 -289 321
-348 66 -23 90 -25 316 -31 235 -6 247 -8 288 -31 24 -13 53 -40 65 -60 22
-35 22 -39 22 -480 0 -509 2 -498 -84 -548 -44 -26 -53 -27 -206 -30 -191 -5
-251 6 -299 51 -47 45 -56 88 -56 280 l0 167 -196 0 -196 0 5 -223 c4 -239 12
-288 65 -395 59 -121 178 -211 328 -249 102 -26 540 -26 634 0 160 44 262 118
324 236 70 133 71 146 71 706 0 551 -1 559 -65 691 -60 122 -153 197 -303 242
-73 22 -108 25 -317 31 -221 6 -237 7 -271 29 -70 43 -74 62 -77 372 -3 288 1
325 40 375 43 55 85 65 276 65 190 0 245 -9 286 -47 41 -38 46 -62 46 -214 l0
-139 196 0 197 0 -6 183 c-8 263 -38 357 -147 461 -65 62 -110 87 -211 117
-66 20 -101 22 -319 25 -135 1 -274 -2 -309 -7z"/>
</g>
      </svg>
    </Box>
  );

  if (disabledLink) {
    return <>{logo}</>;
  }

  return (
    <Link to="/" component={RouterLink} sx={{ display: 'contents' }}>
      {logo}
    </Link>
  );
});

Logo.propTypes = {
  sx: PropTypes.object,
  disabledLink: PropTypes.bool,
};

export default Logo;
